# https://docs.helix-editor.com/keymap.html
# https://github.com/helix-editor/helix/blob/master/helix-term/src/commands.rs
# https://github.com/helix-editor/helix/issues/11206#issuecomment-2236849181
# theme = "ayu_evolve"
# Transparent bgs
# theme = "dark_high_contrast"
theme = "modus_vivendi_deuteranopia"
# theme = "vim_dark_high_contrast"
# theme = "dracula_at_night"

[editor]
bufferline = "multiple"
shell = ["zsh", "-c"]
# whitespace.render = "all"
# cursor-shape.insert = "bar"

[editor.file-picker]
hidden = false
git-ignore = true

# TODO:
# :set file-picker.hidden false
# :set file-picker.hidden true
# etc
# to run eg. mapping to search hidden files

[keys.normal]
# g = { a = "code_action" } # Maps `ga` to show possible code actions
X = ["extend_line_up", "extend_to_line_bounds"]
# Duplicate
"C-p" = ["extend_to_line_bounds", "yank", "paste_after"]
# Move lines up and down
"C-j" = ["extend_to_line_bounds", "delete_selection", "paste_after"]
"C-k" = ["extend_to_line_bounds", "delete_selection", "move_line_up", "paste_before"]
"C-f" = "goto_next_function"
"C-b" = "goto_prev_function"
"C-r" = "redo"
'\' = "hsplit"
'|' = "vsplit"
g.j = ["jump_view_left", "jump_view_up"]
g.k = ["jump_view_right", "jump_view_down"]
# Duplicate line
q.p = ["extend_to_line_bounds", "yank", "paste_after"]
# Quick shortcuts for line end and begin
q.d = ["extend_to_line_bounds", "delete_selection"]
q.j = "goto_line_end"
q.k = "extend_to_line_end"
"C-e" = "extend_to_line_end"
"C-a" = "extend_to_line_start"
"C-A" = "increment"
"C-X" = "decrement"
q.h = "select_all"
g.o = "goto_file_start"
0 = "extend_to_line_start"
# Yank to clipboard
Y = "yank_main_selection_to_clipboard"
" " = { q = ":q", Q = ":q!", "ret" = "last_picker", " " = "global_search", "y" = "yank_abs_filename_to_clipboard", N = ["yank_abs_filename_to_clipboard", ":sh kitty @ launch --type=tab fish -c 'nvim (pbpaste)'"]}
"A-{" = "goto_prev_paragraph"
"A-}" = "goto_next_paragraph"
# ci) or ciq or cinq type stuff
# https://github.com/helix-editor/helix/pull/4709
# https://www.reddit.com/r/HelixEditor/comments/1furs59/mi_from_anywhere_on_the_line/
m.b = "@lf)hmi)"
m.B = "@lf)hma)"
m.")" = "@lf)hmi)"
m."(" = "@lf)hmi)"
m."'" = "@lf'lmi'"
m."`" = "@lf`lmi`"
m."\"" = "@lf\"lmi\""
# Hacky: Regex search for either type of quote
# Then visual search find next of same quote
# which makes new cursor so join selections
# then move selection back 1 char
# then leave visual mode
m.q = "@l/\"|'<ret>lv/<C-r>/<ret><A-minus>hv"
m.Q = "@l/\"|'<ret>v/<C-r>/<ret><A-minus>v"
# TODO: Test with spaces in filename
"minus" = ["yank_abs_filename_to_clipboard", ":sh kitty @ launch --type=tab fish -c 'y (pbpaste)'"]

[keys.insert]
"C-c" = "normal_mode"
j = { k = "normal_mode", i = "normal_mode"}
# https://github.com/helix-editor/helix/pull/3671/files
# https://github.com/helix-editor/helix/pull/3827/files
"C-p" = "move_line_up"
"C-n" = "move_line_down"
"C-b" = "move_char_left"
"C-f" = "move_char_right"
"A-b" = "move_prev_word_end"
"C-left" = "move_prev_word_end"
"A-f" = "move_next_word_start"
"C-right" = "move_next_word_start"
"A-<" = "goto_file_start"
"A->" = "goto_file_end"
"C-a" = "extend_to_line_start"
"C-e" = "extend_to_line_end_newline"
"A-left" = "goto_line_start"
"C-v" = "page_down"
"A-v" = "page_up"
"C-/" = "undo"
"C-?" = "redo"
"A-a" = "goto_prev_paragraph"
"A-e" = "goto_next_paragraph"
"A-{" = "goto_prev_paragraph"
"A-}" = "goto_next_paragraph"
"A-w" = "yank"
"C-y" = ["collapse_selection", "paste_before"]

[keys.select]
q = "extend_to_line_end"
0 = "extend_to_line_start"
Y = "yank_main_selection_to_clipboard"
